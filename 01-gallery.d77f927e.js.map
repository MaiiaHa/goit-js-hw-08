{"mappings":"YAAO,IAAMA,EAAe,CAC1B,CACEC,QACE,yEACFC,SACE,yEACFC,YAAa,mBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,6BAEf,CACEF,QACE,wEACFC,SACE,wEACFC,YAAa,qBAEf,CACEF,QACE,0EACFC,SACE,0EACFC,YAAa,iBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,yBAEf,CACEF,QACE,2EACFC,SACE,2EACFC,YAAa,yBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,6EACFC,SACE,6EACFC,YAAa,yBC1DjBC,QAAQC,IAAIL,GAEZ,IAAMM,EAAgBC,SAASC,cAAc,YACvCC,EAAyCT,EAQ1CU,KAAI,SAAAC,G,IAAGV,EAAOU,EAAPV,QAASC,EAAQS,EAART,SAAUC,EAAWQ,EAAXR,YACzB,MAAO,+EAKIS,OAHwBV,EAAS,yEAIzBU,OADRX,EAAQ,8BAERW,OADQV,EAAS,sBACLU,OAAZT,EAAY,6C,IAKxBU,KAAK,IAnBVP,EAAcQ,mBAAmB,YAAaL,GAE9CH,EAAcS,iBAAiB,SAoB/B,SAAiCC,GAI/B,GAHAA,EAAIC,kBAEwBD,EAAIE,OAAOC,UAAUC,SAAS,kBAExD,OAEFJ,EAAIE,OAAOG,IAAML,EAAIE,OAAOI,QAAQC,OAEpC,IAAMC,EAAWC,cAAcC,OAC7B,iBACyBd,OAAfI,EAAIE,OAAOG,IAAI,oCAG3BG,EAASG,OAETrB,EAAcS,iBACZ,WACA,SAAAa,GACmB,WAAbA,EAAIC,MACNL,EAASM,O,GAGb,CAAEC,MAAM,G,IAOZ,IAAMC,EAAWzB,SAAS0B,iBAAiB,mBAC3CD,EAASE,SAAQ,SAAAC,GACfA,EAAIC,QAAU,OACdD,EAAIE,OAAS,O,IAGfjC,QAAQC,IAAI2B,GAUZ,IAAMM,EAAW,IAAIC,sBARrB,SAA4BC,GAC1BA,EAAQN,SAAQ,SAAAO,GACVA,EAAMC,eACVD,EAAMvB,OAAOG,IAAMoB,EAAMvB,OAAOI,QAAQC,OACxCe,EAASK,UAAUF,EAAMvB,O,OAK7Bc,EAASE,SAAQ,SAAAU,GACfN,EAASO,QAAQD,E","sources":["src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","// Add imports above this line\nimport { galleryItems } from './gallery-items';\n// Change code below this line\n\nconsole.log(galleryItems);\n\nconst imgsContainer = document.querySelector('.gallery');\nconst galleryMarkup = createGalleryCardsMarkup(galleryItems);\n\nimgsContainer.insertAdjacentHTML('beforeend', galleryMarkup);\n\nimgsContainer.addEventListener('click', onGalleryContainerClick);\n\nfunction createGalleryCardsMarkup(galleryItems) {\n  return galleryItems\n    .map(({ preview, original, description }) => {\n      return `\n      <div class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"${original}\">\n          <img\n          class=\"gallery__image\"\n          src=\"${preview}\"\n          data-source=\"${original}\"\n          alt=\"${description}\"\n          />\n        </a>\n     </div>`;\n    })\n    .join('');\n}\n\nfunction onGalleryContainerClick(evt) {\n  evt.preventDefault(); // do not save img\n\n  const isGalleryContainImg = evt.target.classList.contains('gallery__image');\n  if (!isGalleryContainImg) {\n    return;\n  }\n  evt.target.src = evt.target.dataset.source; // chance for a big picture\n\n  const instance = basicLightbox.create(\n    `\n  <img src=\"${evt.target.src}\" width=\"800\" height=\"600\">\n  `\n  );\n  instance.show();\n\n  imgsContainer.addEventListener(\n    'keydown',\n    evt => {\n      if (evt.code === 'Escape') {\n        instance.close();\n      }\n    },\n    { once: true } // close after first click on escape\n  );\n}\n\n// add loading = 'lazy';\n\n// intersection observer - 'lazy' load\nconst lazyImgs = document.querySelectorAll('.gallery__image');\nlazyImgs.forEach(img => {\n  img.loading = 'lazy';\n  img.height = '240px'; // should be for lazy works\n});\n\nconsole.log(lazyImgs);\n\nfunction handleIntersection(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting);\n    entry.target.src = entry.target.dataset.source;\n    observer.unobserve(entry.target);\n  });\n}\n\nconst observer = new IntersectionObserver(handleIntersection);\nlazyImgs.forEach(image => {\n  observer.observe(image);\n});\n"],"names":["$9d886f23975dc289$export$f795133be3c5eb8c","preview","original","description","console","log","$d8d07e2615fdd861$var$imgsContainer","document","querySelector","$d8d07e2615fdd861$var$galleryMarkup","map","param","concat","join","insertAdjacentHTML","addEventListener","evt1","preventDefault","target","classList","contains","src","dataset","source","instance","basicLightbox","create","show","evt","code","close","once","$d8d07e2615fdd861$var$lazyImgs","querySelectorAll","forEach","img","loading","height","$d8d07e2615fdd861$var$observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","image","observe"],"version":3,"file":"01-gallery.d77f927e.js.map"}